import type { ApplicationEmojiStructure, CacheFrom, ReturnCache } from '../..';
import { type GuildEmojiStructure } from '../../client/transformers';
import type { APIApplicationEmoji, APIEmoji } from '../../types';
import { GuildRelatedResource } from './default/guild-related';
export declare class Emojis extends GuildRelatedResource<any, APIEmoji | APIApplicationEmoji> {
    namespace: string;
    filter(data: APIEmoji, id: string, guild_id: string, from: CacheFrom): boolean;
    get(id: string): ReturnCache<GuildEmojiStructure | ApplicationEmojiStructure | undefined>;
    raw(id: string): ReturnCache<APIEmoji | undefined>;
    bulk(ids: string[]): ReturnCache<(GuildEmojiStructure | ApplicationEmojiStructure)[]>;
    bulkRaw(ids: string[]): ReturnCache<(APIEmoji & {
        id: string;
        guild_id: string;
    })[]>;
    values(guild: string): ReturnCache<(GuildEmojiStructure | ApplicationEmojiStructure)[]>;
    valuesRaw(guild: string): ReturnCache<(((APIEmoji & {
        id: string;
    }) | APIApplicationEmoji) & {
        guild_id: string;
    })[]>;
}
