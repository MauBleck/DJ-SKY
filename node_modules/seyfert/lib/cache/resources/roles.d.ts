import type { CacheFrom, ReturnCache } from '../..';
import { type GuildRoleStructure } from '../../client/transformers';
import type { APIRole } from '../../types';
import { GuildRelatedResource } from './default/guild-related';
export declare class Roles extends GuildRelatedResource<any, APIRole> {
    namespace: string;
    filter(data: APIRole, id: string, guild_id: string, from: CacheFrom): boolean;
    get(id: string): ReturnCache<GuildRoleStructure | undefined>;
    raw(id: string): ReturnCache<APIRole | undefined>;
    bulk(ids: string[]): ReturnCache<GuildRoleStructure[]>;
    bulkRaw(ids: string[]): ReturnCache<APIRole[]>;
    values(guild: string): ReturnCache<GuildRoleStructure[]>;
    valuesRaw(guild: string): ReturnCache<APIRole[]>;
}
