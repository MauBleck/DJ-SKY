import type { CacheFrom, ReturnCache } from '../..';
import { type UserStructure } from '../../client/transformers';
import type { APIUser } from '../../types';
import { BaseResource } from './default/base';
export declare class Users extends BaseResource<any, APIUser> {
    namespace: string;
    filter(data: APIUser, id: string, from: CacheFrom): boolean;
    get(id: string): ReturnCache<UserStructure | undefined>;
    raw(id: string): ReturnCache<APIUser | undefined>;
    bulk(ids: string[]): ReturnCache<UserStructure[]>;
    bulkRaw(ids: string[]): ReturnCache<APIUser[]>;
    values(): ReturnCache<UserStructure[]>;
    valuesRaw(): ReturnCache<APIUser[]>;
}
