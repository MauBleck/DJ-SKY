import type { RESTPostAPIChannelInviteJSONBody } from '../../types';
import { BaseShorter } from './base';
export declare class InvitesShorter extends BaseShorter {
    get(code: string): Promise<{
        code: string;
        guild?: {
            id: string;
            name: string;
            description: string | null;
            icon: string | null;
            splash: string | null;
            banner: string | null;
            features: import("../../types").GuildFeature[];
            verificationLevel: import("../../types").GuildVerificationLevel;
            vanityUrlCode: string | null;
            premiumSubscriptionCount?: number | undefined;
            nsfwLevel: import("../../types").GuildNSFWLevel;
        } | undefined;
        channel: {
            id: string;
            type: import("../../types").ChannelType;
            name: string | null;
        } | null;
        inviter?: {
            id: string;
            username: string;
            discriminator: string;
            globalName: string | null;
            avatar: string | null;
            bot?: boolean | undefined;
            system?: boolean | undefined;
            mfaEnabled?: boolean | undefined;
            banner?: string | null | undefined;
            accentColor?: number | null | undefined;
            locale?: string | undefined;
            verified?: boolean | undefined;
            email?: string | null | undefined;
            flags?: import("../../types").UserFlags | undefined;
            premiumType?: import("../../types").UserPremiumType | undefined;
            publicFlags?: import("../../types").UserFlags | undefined;
            avatarDecorationData?: import("../../types").APIAvatarDecorationData | null | undefined;
        } | undefined;
        targetType?: import("../../types").InviteTargetType | undefined;
        targetUser?: {
            id: string;
            username: string;
            discriminator: string;
            globalName: string | null;
            avatar: string | null;
            bot?: boolean | undefined;
            system?: boolean | undefined;
            mfaEnabled?: boolean | undefined;
            banner?: string | null | undefined;
            accentColor?: number | null | undefined;
            locale?: string | undefined;
            verified?: boolean | undefined;
            email?: string | null | undefined;
            flags?: import("../../types").UserFlags | undefined;
            premiumType?: import("../../types").UserPremiumType | undefined;
            publicFlags?: import("../../types").UserFlags | undefined;
            avatarDecorationData?: import("../../types").APIAvatarDecorationData | null | undefined;
        } | undefined;
        targetApplication?: {
            id?: string | undefined;
            name?: string | undefined;
            icon?: string | null | undefined;
            description?: string | undefined;
            rpcOrigins?: string[] | undefined;
            botPublic?: boolean | undefined;
            botRequireCodeGrant?: boolean | undefined;
            bot?: import("../../types").APIUser | undefined;
            termsOfServiceUrl?: string | undefined;
            privacyPolicyUrl?: string | undefined;
            owner?: import("../../types").APIUser | undefined;
            verifyKey?: string | undefined;
            team?: import("../../types").APITeam | null | undefined;
            guildId?: string | undefined;
            guild?: import("../../types").APIPartialGuild | undefined;
            primarySkuId?: string | undefined;
            slug?: string | undefined;
            coverImage?: string | undefined;
            flags?: import("../../types").ApplicationFlags | undefined;
            approximateGuildCount?: number | undefined;
            approximateUserInstallCount?: number | undefined;
            redirectUris?: string[] | undefined;
            interactionsEndpointUrl?: string | null | undefined;
            roleConnectionsVerificationUrl?: string | null | undefined;
            tags?: [string, (string | undefined)?, (string | undefined)?, (string | undefined)?, (string | undefined)?] | undefined;
            installParams?: import("../../types").APIApplicationInstallParams | undefined;
            integrationTypesConfig?: import("../../types").APIApplicationIntegrationTypesConfigMap | undefined;
            customInstallUrl?: string | undefined;
        } | undefined;
        approximatePresenceCount?: number | undefined;
        approximateMemberCount?: number | undefined;
        expiresAt?: string | null | undefined;
        guildScheduledEvent?: {
            channelId: string;
            entityMetadata: null;
            id: string;
            guildId: string;
            creatorId?: string | null | undefined;
            name: string;
            description?: string | null | undefined;
            scheduledStartTime: string;
            scheduledEndTime: string | null;
            privacyLevel: import("../../types").GuildScheduledEventPrivacyLevel;
            status: import("../../types").GuildScheduledEventStatus;
            entityType: import("../../types").GuildScheduledEventEntityType.StageInstance;
            entityId: string | null;
            creator?: import("../../types").APIUser | undefined;
            userCount?: number | undefined;
            image?: string | null | undefined;
            recurrenceRule: import("../../types").APIGuildScheduledEventRecurrenceRule | null;
        } | {
            channelId: string;
            entityMetadata: null;
            id: string;
            guildId: string;
            creatorId?: string | null | undefined;
            name: string;
            description?: string | null | undefined;
            scheduledStartTime: string;
            scheduledEndTime: string | null;
            privacyLevel: import("../../types").GuildScheduledEventPrivacyLevel;
            status: import("../../types").GuildScheduledEventStatus;
            entityType: import("../../types").GuildScheduledEventEntityType.Voice;
            entityId: string | null;
            creator?: import("../../types").APIUser | undefined;
            userCount?: number | undefined;
            image?: string | null | undefined;
            recurrenceRule: import("../../types").APIGuildScheduledEventRecurrenceRule | null;
        } | {
            channelId: null;
            entityMetadata: {
                location: string;
            };
            id: string;
            guildId: string;
            creatorId?: string | null | undefined;
            name: string;
            description?: string | null | undefined;
            scheduledStartTime: string;
            scheduledEndTime: string | null;
            privacyLevel: import("../../types").GuildScheduledEventPrivacyLevel;
            status: import("../../types").GuildScheduledEventStatus;
            entityType: import("../../types").GuildScheduledEventEntityType.External;
            entityId: string | null;
            creator?: import("../../types").APIUser | undefined;
            userCount?: number | undefined;
            image?: string | null | undefined;
            recurrenceRule: import("../../types").APIGuildScheduledEventRecurrenceRule | null;
        } | undefined;
        type: import("../../types").InviteType;
    }>;
    delete(code: string, reason?: string): Promise<{
        code: string;
        guild?: {
            id: string;
            name: string;
            description: string | null;
            icon: string | null;
            splash: string | null;
            banner: string | null;
            features: import("../../types").GuildFeature[];
            verificationLevel: import("../../types").GuildVerificationLevel;
            vanityUrlCode: string | null;
            premiumSubscriptionCount?: number | undefined;
            nsfwLevel: import("../../types").GuildNSFWLevel;
        } | undefined;
        channel: {
            id: string;
            type: import("../../types").ChannelType;
            name: string | null;
        } | null;
        inviter?: {
            id: string;
            username: string;
            discriminator: string;
            globalName: string | null;
            avatar: string | null;
            bot?: boolean | undefined;
            system?: boolean | undefined;
            mfaEnabled?: boolean | undefined;
            banner?: string | null | undefined;
            accentColor?: number | null | undefined;
            locale?: string | undefined;
            verified?: boolean | undefined;
            email?: string | null | undefined;
            flags?: import("../../types").UserFlags | undefined;
            premiumType?: import("../../types").UserPremiumType | undefined;
            publicFlags?: import("../../types").UserFlags | undefined;
            avatarDecorationData?: import("../../types").APIAvatarDecorationData | null | undefined;
        } | undefined;
        targetType?: import("../../types").InviteTargetType | undefined;
        targetUser?: {
            id: string;
            username: string;
            discriminator: string;
            globalName: string | null;
            avatar: string | null;
            bot?: boolean | undefined;
            system?: boolean | undefined;
            mfaEnabled?: boolean | undefined;
            banner?: string | null | undefined;
            accentColor?: number | null | undefined;
            locale?: string | undefined;
            verified?: boolean | undefined;
            email?: string | null | undefined;
            flags?: import("../../types").UserFlags | undefined;
            premiumType?: import("../../types").UserPremiumType | undefined;
            publicFlags?: import("../../types").UserFlags | undefined;
            avatarDecorationData?: import("../../types").APIAvatarDecorationData | null | undefined;
        } | undefined;
        targetApplication?: {
            id?: string | undefined;
            name?: string | undefined;
            icon?: string | null | undefined;
            description?: string | undefined;
            rpcOrigins?: string[] | undefined;
            botPublic?: boolean | undefined;
            botRequireCodeGrant?: boolean | undefined;
            bot?: import("../../types").APIUser | undefined;
            termsOfServiceUrl?: string | undefined;
            privacyPolicyUrl?: string | undefined;
            owner?: import("../../types").APIUser | undefined;
            verifyKey?: string | undefined;
            team?: import("../../types").APITeam | null | undefined;
            guildId?: string | undefined;
            guild?: import("../../types").APIPartialGuild | undefined;
            primarySkuId?: string | undefined;
            slug?: string | undefined;
            coverImage?: string | undefined;
            flags?: import("../../types").ApplicationFlags | undefined;
            approximateGuildCount?: number | undefined;
            approximateUserInstallCount?: number | undefined;
            redirectUris?: string[] | undefined;
            interactionsEndpointUrl?: string | null | undefined;
            roleConnectionsVerificationUrl?: string | null | undefined;
            tags?: [string, (string | undefined)?, (string | undefined)?, (string | undefined)?, (string | undefined)?] | undefined;
            installParams?: import("../../types").APIApplicationInstallParams | undefined;
            integrationTypesConfig?: import("../../types").APIApplicationIntegrationTypesConfigMap | undefined;
            customInstallUrl?: string | undefined;
        } | undefined;
        approximatePresenceCount?: number | undefined;
        approximateMemberCount?: number | undefined;
        expiresAt?: string | null | undefined;
        guildScheduledEvent?: {
            channelId: string;
            entityMetadata: null;
            id: string;
            guildId: string;
            creatorId?: string | null | undefined;
            name: string;
            description?: string | null | undefined;
            scheduledStartTime: string;
            scheduledEndTime: string | null;
            privacyLevel: import("../../types").GuildScheduledEventPrivacyLevel;
            status: import("../../types").GuildScheduledEventStatus;
            entityType: import("../../types").GuildScheduledEventEntityType.StageInstance;
            entityId: string | null;
            creator?: import("../../types").APIUser | undefined;
            userCount?: number | undefined;
            image?: string | null | undefined;
            recurrenceRule: import("../../types").APIGuildScheduledEventRecurrenceRule | null;
        } | {
            channelId: string;
            entityMetadata: null;
            id: string;
            guildId: string;
            creatorId?: string | null | undefined;
            name: string;
            description?: string | null | undefined;
            scheduledStartTime: string;
            scheduledEndTime: string | null;
            privacyLevel: import("../../types").GuildScheduledEventPrivacyLevel;
            status: import("../../types").GuildScheduledEventStatus;
            entityType: import("../../types").GuildScheduledEventEntityType.Voice;
            entityId: string | null;
            creator?: import("../../types").APIUser | undefined;
            userCount?: number | undefined;
            image?: string | null | undefined;
            recurrenceRule: import("../../types").APIGuildScheduledEventRecurrenceRule | null;
        } | {
            channelId: null;
            entityMetadata: {
                location: string;
            };
            id: string;
            guildId: string;
            creatorId?: string | null | undefined;
            name: string;
            description?: string | null | undefined;
            scheduledStartTime: string;
            scheduledEndTime: string | null;
            privacyLevel: import("../../types").GuildScheduledEventPrivacyLevel;
            status: import("../../types").GuildScheduledEventStatus;
            entityType: import("../../types").GuildScheduledEventEntityType.External;
            entityId: string | null;
            creator?: import("../../types").APIUser | undefined;
            userCount?: number | undefined;
            image?: string | null | undefined;
            recurrenceRule: import("../../types").APIGuildScheduledEventRecurrenceRule | null;
        } | undefined;
        type: import("../../types").InviteType;
    }>;
    channels: {
        create: ({ channelId, reason, ...body }: CreateInviteFromChannel) => Promise<{
            uses: number;
            maxUses: number;
            maxAge: number;
            temporary: boolean;
            createdAt: string;
            code: string;
            guild?: {
                id: string;
                name: string;
                description: string | null;
                icon: string | null;
                splash: string | null;
                banner: string | null;
                features: import("../../types").GuildFeature[];
                verificationLevel: import("../../types").GuildVerificationLevel;
                vanityUrlCode: string | null;
                premiumSubscriptionCount?: number | undefined;
                nsfwLevel: import("../../types").GuildNSFWLevel;
            } | undefined;
            channel: {
                id: string;
                type: import("../../types").ChannelType;
                name: string | null;
            } | null;
            inviter?: {
                id: string;
                username: string;
                discriminator: string;
                globalName: string | null;
                avatar: string | null;
                bot?: boolean | undefined;
                system?: boolean | undefined;
                mfaEnabled?: boolean | undefined;
                banner?: string | null | undefined;
                accentColor?: number | null | undefined;
                locale?: string | undefined;
                verified?: boolean | undefined;
                email?: string | null | undefined;
                flags?: import("../../types").UserFlags | undefined;
                premiumType?: import("../../types").UserPremiumType | undefined;
                publicFlags?: import("../../types").UserFlags | undefined;
                avatarDecorationData?: import("../../types").APIAvatarDecorationData | null | undefined;
            } | undefined;
            targetType?: import("../../types").InviteTargetType | undefined;
            targetUser?: {
                id: string;
                username: string;
                discriminator: string;
                globalName: string | null;
                avatar: string | null;
                bot?: boolean | undefined;
                system?: boolean | undefined;
                mfaEnabled?: boolean | undefined;
                banner?: string | null | undefined;
                accentColor?: number | null | undefined;
                locale?: string | undefined;
                verified?: boolean | undefined;
                email?: string | null | undefined;
                flags?: import("../../types").UserFlags | undefined;
                premiumType?: import("../../types").UserPremiumType | undefined;
                publicFlags?: import("../../types").UserFlags | undefined;
                avatarDecorationData?: import("../../types").APIAvatarDecorationData | null | undefined;
            } | undefined;
            targetApplication?: {
                id?: string | undefined;
                name?: string | undefined;
                icon?: string | null | undefined;
                description?: string | undefined;
                rpcOrigins?: string[] | undefined;
                botPublic?: boolean | undefined;
                botRequireCodeGrant?: boolean | undefined;
                bot?: import("../../types").APIUser | undefined;
                termsOfServiceUrl?: string | undefined;
                privacyPolicyUrl?: string | undefined;
                owner?: import("../../types").APIUser | undefined;
                verifyKey?: string | undefined;
                team?: import("../../types").APITeam | null | undefined;
                guildId?: string | undefined;
                guild?: import("../../types").APIPartialGuild | undefined;
                primarySkuId?: string | undefined;
                slug?: string | undefined;
                coverImage?: string | undefined;
                flags?: import("../../types").ApplicationFlags | undefined;
                approximateGuildCount?: number | undefined;
                approximateUserInstallCount?: number | undefined;
                redirectUris?: string[] | undefined;
                interactionsEndpointUrl?: string | null | undefined;
                roleConnectionsVerificationUrl?: string | null | undefined;
                tags?: [string, (string | undefined)?, (string | undefined)?, (string | undefined)?, (string | undefined)?] | undefined;
                installParams?: import("../../types").APIApplicationInstallParams | undefined;
                integrationTypesConfig?: import("../../types").APIApplicationIntegrationTypesConfigMap | undefined;
                customInstallUrl?: string | undefined;
            } | undefined;
            approximatePresenceCount?: number | undefined;
            approximateMemberCount?: number | undefined;
            expiresAt?: string | null | undefined;
            guildScheduledEvent?: {
                channelId: string;
                entityMetadata: null;
                id: string;
                guildId: string;
                creatorId?: string | null | undefined;
                name: string;
                description?: string | null | undefined;
                scheduledStartTime: string;
                scheduledEndTime: string | null;
                privacyLevel: import("../../types").GuildScheduledEventPrivacyLevel;
                status: import("../../types").GuildScheduledEventStatus;
                entityType: import("../../types").GuildScheduledEventEntityType.StageInstance;
                entityId: string | null;
                creator?: import("../../types").APIUser | undefined;
                userCount?: number | undefined;
                image?: string | null | undefined;
                recurrenceRule: import("../../types").APIGuildScheduledEventRecurrenceRule | null;
            } | {
                channelId: string;
                entityMetadata: null;
                id: string;
                guildId: string;
                creatorId?: string | null | undefined;
                name: string;
                description?: string | null | undefined;
                scheduledStartTime: string;
                scheduledEndTime: string | null;
                privacyLevel: import("../../types").GuildScheduledEventPrivacyLevel;
                status: import("../../types").GuildScheduledEventStatus;
                entityType: import("../../types").GuildScheduledEventEntityType.Voice;
                entityId: string | null;
                creator?: import("../../types").APIUser | undefined;
                userCount?: number | undefined;
                image?: string | null | undefined;
                recurrenceRule: import("../../types").APIGuildScheduledEventRecurrenceRule | null;
            } | {
                channelId: null;
                entityMetadata: {
                    location: string;
                };
                id: string;
                guildId: string;
                creatorId?: string | null | undefined;
                name: string;
                description?: string | null | undefined;
                scheduledStartTime: string;
                scheduledEndTime: string | null;
                privacyLevel: import("../../types").GuildScheduledEventPrivacyLevel;
                status: import("../../types").GuildScheduledEventStatus;
                entityType: import("../../types").GuildScheduledEventEntityType.External;
                entityId: string | null;
                creator?: import("../../types").APIUser | undefined;
                userCount?: number | undefined;
                image?: string | null | undefined;
                recurrenceRule: import("../../types").APIGuildScheduledEventRecurrenceRule | null;
            } | undefined;
            type: import("../../types").InviteType;
        }>;
        list: (channelId: string) => Promise<{
            uses: number;
            maxUses: number;
            maxAge: number;
            temporary: boolean;
            createdAt: string;
            code: string;
            guild?: {
                id: string;
                name: string;
                description: string | null;
                icon: string | null;
                splash: string | null;
                banner: string | null;
                features: import("../../types").GuildFeature[];
                verificationLevel: import("../../types").GuildVerificationLevel;
                vanityUrlCode: string | null;
                premiumSubscriptionCount?: number | undefined;
                nsfwLevel: import("../../types").GuildNSFWLevel;
            } | undefined;
            channel: {
                id: string;
                type: import("../../types").ChannelType;
                name: string | null;
            } | null;
            inviter?: {
                id: string;
                username: string;
                discriminator: string;
                globalName: string | null;
                avatar: string | null;
                bot?: boolean | undefined;
                system?: boolean | undefined;
                mfaEnabled?: boolean | undefined;
                banner?: string | null | undefined;
                accentColor?: number | null | undefined;
                locale?: string | undefined;
                verified?: boolean | undefined;
                email?: string | null | undefined;
                flags?: import("../../types").UserFlags | undefined;
                premiumType?: import("../../types").UserPremiumType | undefined;
                publicFlags?: import("../../types").UserFlags | undefined;
                avatarDecorationData?: import("../../types").APIAvatarDecorationData | null | undefined;
            } | undefined;
            targetType?: import("../../types").InviteTargetType | undefined;
            targetUser?: {
                id: string;
                username: string;
                discriminator: string;
                globalName: string | null;
                avatar: string | null;
                bot?: boolean | undefined;
                system?: boolean | undefined;
                mfaEnabled?: boolean | undefined;
                banner?: string | null | undefined;
                accentColor?: number | null | undefined;
                locale?: string | undefined;
                verified?: boolean | undefined;
                email?: string | null | undefined;
                flags?: import("../../types").UserFlags | undefined;
                premiumType?: import("../../types").UserPremiumType | undefined;
                publicFlags?: import("../../types").UserFlags | undefined;
                avatarDecorationData?: import("../../types").APIAvatarDecorationData | null | undefined;
            } | undefined;
            targetApplication?: {
                id?: string | undefined;
                name?: string | undefined;
                icon?: string | null | undefined;
                description?: string | undefined;
                rpcOrigins?: string[] | undefined;
                botPublic?: boolean | undefined;
                botRequireCodeGrant?: boolean | undefined;
                bot?: import("../../types").APIUser | undefined;
                termsOfServiceUrl?: string | undefined;
                privacyPolicyUrl?: string | undefined;
                owner?: import("../../types").APIUser | undefined;
                verifyKey?: string | undefined;
                team?: import("../../types").APITeam | null | undefined;
                guildId?: string | undefined;
                guild?: import("../../types").APIPartialGuild | undefined;
                primarySkuId?: string | undefined;
                slug?: string | undefined;
                coverImage?: string | undefined;
                flags?: import("../../types").ApplicationFlags | undefined;
                approximateGuildCount?: number | undefined;
                approximateUserInstallCount?: number | undefined;
                redirectUris?: string[] | undefined;
                interactionsEndpointUrl?: string | null | undefined;
                roleConnectionsVerificationUrl?: string | null | undefined;
                tags?: [string, (string | undefined)?, (string | undefined)?, (string | undefined)?, (string | undefined)?] | undefined;
                installParams?: import("../../types").APIApplicationInstallParams | undefined;
                integrationTypesConfig?: import("../../types").APIApplicationIntegrationTypesConfigMap | undefined;
                customInstallUrl?: string | undefined;
            } | undefined;
            approximatePresenceCount?: number | undefined;
            approximateMemberCount?: number | undefined;
            expiresAt?: string | null | undefined;
            guildScheduledEvent?: {
                channelId: string;
                entityMetadata: null;
                id: string;
                guildId: string;
                creatorId?: string | null | undefined;
                name: string;
                description?: string | null | undefined;
                scheduledStartTime: string;
                scheduledEndTime: string | null;
                privacyLevel: import("../../types").GuildScheduledEventPrivacyLevel;
                status: import("../../types").GuildScheduledEventStatus;
                entityType: import("../../types").GuildScheduledEventEntityType.StageInstance;
                entityId: string | null;
                creator?: import("../../types").APIUser | undefined;
                userCount?: number | undefined;
                image?: string | null | undefined;
                recurrenceRule: import("../../types").APIGuildScheduledEventRecurrenceRule | null;
            } | {
                channelId: string;
                entityMetadata: null;
                id: string;
                guildId: string;
                creatorId?: string | null | undefined;
                name: string;
                description?: string | null | undefined;
                scheduledStartTime: string;
                scheduledEndTime: string | null;
                privacyLevel: import("../../types").GuildScheduledEventPrivacyLevel;
                status: import("../../types").GuildScheduledEventStatus;
                entityType: import("../../types").GuildScheduledEventEntityType.Voice;
                entityId: string | null;
                creator?: import("../../types").APIUser | undefined;
                userCount?: number | undefined;
                image?: string | null | undefined;
                recurrenceRule: import("../../types").APIGuildScheduledEventRecurrenceRule | null;
            } | {
                channelId: null;
                entityMetadata: {
                    location: string;
                };
                id: string;
                guildId: string;
                creatorId?: string | null | undefined;
                name: string;
                description?: string | null | undefined;
                scheduledStartTime: string;
                scheduledEndTime: string | null;
                privacyLevel: import("../../types").GuildScheduledEventPrivacyLevel;
                status: import("../../types").GuildScheduledEventStatus;
                entityType: import("../../types").GuildScheduledEventEntityType.External;
                entityId: string | null;
                creator?: import("../../types").APIUser | undefined;
                userCount?: number | undefined;
                image?: string | null | undefined;
                recurrenceRule: import("../../types").APIGuildScheduledEventRecurrenceRule | null;
            } | undefined;
            type: import("../../types").InviteType;
        }[]>;
    };
    guilds: {
        list: (guildId: string) => Promise<{
            uses: number;
            maxUses: number;
            maxAge: number;
            temporary: boolean;
            createdAt: string;
            code: string;
            guild?: {
                id: string;
                name: string;
                description: string | null;
                icon: string | null;
                splash: string | null;
                banner: string | null;
                features: import("../../types").GuildFeature[];
                verificationLevel: import("../../types").GuildVerificationLevel;
                vanityUrlCode: string | null;
                premiumSubscriptionCount?: number | undefined;
                nsfwLevel: import("../../types").GuildNSFWLevel;
            } | undefined;
            channel: {
                id: string;
                type: import("../../types").ChannelType;
                name: string | null;
            } | null;
            inviter?: {
                id: string;
                username: string;
                discriminator: string;
                globalName: string | null;
                avatar: string | null;
                bot?: boolean | undefined;
                system?: boolean | undefined;
                mfaEnabled?: boolean | undefined;
                banner?: string | null | undefined;
                accentColor?: number | null | undefined;
                locale?: string | undefined;
                verified?: boolean | undefined;
                email?: string | null | undefined;
                flags?: import("../../types").UserFlags | undefined;
                premiumType?: import("../../types").UserPremiumType | undefined;
                publicFlags?: import("../../types").UserFlags | undefined;
                avatarDecorationData?: import("../../types").APIAvatarDecorationData | null | undefined;
            } | undefined;
            targetType?: import("../../types").InviteTargetType | undefined;
            targetUser?: {
                id: string;
                username: string;
                discriminator: string;
                globalName: string | null;
                avatar: string | null;
                bot?: boolean | undefined;
                system?: boolean | undefined;
                mfaEnabled?: boolean | undefined;
                banner?: string | null | undefined;
                accentColor?: number | null | undefined;
                locale?: string | undefined;
                verified?: boolean | undefined;
                email?: string | null | undefined;
                flags?: import("../../types").UserFlags | undefined;
                premiumType?: import("../../types").UserPremiumType | undefined;
                publicFlags?: import("../../types").UserFlags | undefined;
                avatarDecorationData?: import("../../types").APIAvatarDecorationData | null | undefined;
            } | undefined;
            targetApplication?: {
                id?: string | undefined;
                name?: string | undefined;
                icon?: string | null | undefined;
                description?: string | undefined;
                rpcOrigins?: string[] | undefined;
                botPublic?: boolean | undefined;
                botRequireCodeGrant?: boolean | undefined;
                bot?: import("../../types").APIUser | undefined;
                termsOfServiceUrl?: string | undefined;
                privacyPolicyUrl?: string | undefined;
                owner?: import("../../types").APIUser | undefined;
                verifyKey?: string | undefined;
                team?: import("../../types").APITeam | null | undefined;
                guildId?: string | undefined;
                guild?: import("../../types").APIPartialGuild | undefined;
                primarySkuId?: string | undefined;
                slug?: string | undefined;
                coverImage?: string | undefined;
                flags?: import("../../types").ApplicationFlags | undefined;
                approximateGuildCount?: number | undefined;
                approximateUserInstallCount?: number | undefined;
                redirectUris?: string[] | undefined;
                interactionsEndpointUrl?: string | null | undefined;
                roleConnectionsVerificationUrl?: string | null | undefined;
                tags?: [string, (string | undefined)?, (string | undefined)?, (string | undefined)?, (string | undefined)?] | undefined;
                installParams?: import("../../types").APIApplicationInstallParams | undefined;
                integrationTypesConfig?: import("../../types").APIApplicationIntegrationTypesConfigMap | undefined;
                customInstallUrl?: string | undefined;
            } | undefined;
            approximatePresenceCount?: number | undefined;
            approximateMemberCount?: number | undefined;
            expiresAt?: string | null | undefined;
            guildScheduledEvent?: {
                channelId: string;
                entityMetadata: null;
                id: string;
                guildId: string;
                creatorId?: string | null | undefined;
                name: string;
                description?: string | null | undefined;
                scheduledStartTime: string;
                scheduledEndTime: string | null;
                privacyLevel: import("../../types").GuildScheduledEventPrivacyLevel;
                status: import("../../types").GuildScheduledEventStatus;
                entityType: import("../../types").GuildScheduledEventEntityType.StageInstance;
                entityId: string | null;
                creator?: import("../../types").APIUser | undefined;
                userCount?: number | undefined;
                image?: string | null | undefined;
                recurrenceRule: import("../../types").APIGuildScheduledEventRecurrenceRule | null;
            } | {
                channelId: string;
                entityMetadata: null;
                id: string;
                guildId: string;
                creatorId?: string | null | undefined;
                name: string;
                description?: string | null | undefined;
                scheduledStartTime: string;
                scheduledEndTime: string | null;
                privacyLevel: import("../../types").GuildScheduledEventPrivacyLevel;
                status: import("../../types").GuildScheduledEventStatus;
                entityType: import("../../types").GuildScheduledEventEntityType.Voice;
                entityId: string | null;
                creator?: import("../../types").APIUser | undefined;
                userCount?: number | undefined;
                image?: string | null | undefined;
                recurrenceRule: import("../../types").APIGuildScheduledEventRecurrenceRule | null;
            } | {
                channelId: null;
                entityMetadata: {
                    location: string;
                };
                id: string;
                guildId: string;
                creatorId?: string | null | undefined;
                name: string;
                description?: string | null | undefined;
                scheduledStartTime: string;
                scheduledEndTime: string | null;
                privacyLevel: import("../../types").GuildScheduledEventPrivacyLevel;
                status: import("../../types").GuildScheduledEventStatus;
                entityType: import("../../types").GuildScheduledEventEntityType.External;
                entityId: string | null;
                creator?: import("../../types").APIUser | undefined;
                userCount?: number | undefined;
                image?: string | null | undefined;
                recurrenceRule: import("../../types").APIGuildScheduledEventRecurrenceRule | null;
            } | undefined;
            type: import("../../types").InviteType;
        }[]>;
    };
}
export interface CreateInviteFromChannel extends RESTPostAPIChannelInviteJSONBody {
    channelId: string;
    reason?: string;
}
