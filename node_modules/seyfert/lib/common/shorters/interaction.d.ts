import { type ReplyInteractionBody } from '../..';
import { type WebhookMessageStructure } from '../../client/transformers';
import type { InteractionMessageUpdateBodyRequest, MessageWebhookCreateBodyRequest } from '../types/write';
import { BaseShorter } from './base';
export declare class InteractionShorter extends BaseShorter {
    reply(id: string, token: string, body: ReplyInteractionBody, withResponse?: boolean): Promise<import("../../types").RESTPostAPIInteractionCallbackResult | undefined>;
    fetchResponse(token: string, messageId: string): Promise<WebhookMessageStructure>;
    fetchOriginal(token: string): Promise<WebhookMessageStructure>;
    editMessage(token: string, messageId: string, body: InteractionMessageUpdateBodyRequest): Promise<WebhookMessageStructure>;
    editOriginal(token: string, body: InteractionMessageUpdateBodyRequest): Promise<WebhookMessageStructure>;
    deleteResponse(token: string, messageId: string): Promise<void>;
    deleteOriginal(token: string): Promise<void>;
    followup(token: string, { files, ...body }: MessageWebhookCreateBodyRequest): Promise<WebhookMessageStructure>;
}
