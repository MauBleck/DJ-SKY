import { type UserStructure } from '../../client/transformers';
import type { UsingClient } from '../../commands';
import { type ObjectToLower } from '../../common';
import type { GatewayIntegrationCreateDispatchData, GatewayIntegrationDeleteDispatchData, GatewayIntegrationUpdateDispatchData } from '../../types';
export declare const INTEGRATION_CREATE: (self: UsingClient, data: GatewayIntegrationCreateDispatchData) => (ObjectToLower<Omit<GatewayIntegrationCreateDispatchData, "user">> & {
    user: UserStructure;
}) | ObjectToLower<Omit<GatewayIntegrationCreateDispatchData, "user">>;
export declare const INTEGRATION_UPDATE: (self: UsingClient, data: GatewayIntegrationUpdateDispatchData) => (ObjectToLower<Omit<GatewayIntegrationUpdateDispatchData, "user">> & {
    user: UserStructure;
}) | ObjectToLower<Omit<GatewayIntegrationUpdateDispatchData, "user">>;
export declare const INTEGRATION_DELETE: (_self: UsingClient, data: GatewayIntegrationDeleteDispatchData) => {
    id: string;
    guildId: string;
    applicationId?: string | undefined;
};
