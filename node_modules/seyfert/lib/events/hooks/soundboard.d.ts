import { type UserStructure } from '../../client';
import type { UsingClient } from '../../commands';
import { type ObjectToLower } from '../../common';
import type { APISoundBoard, GatewayGuildSoundboardSoundCreateDispatchData, GatewayGuildSoundboardSoundDeleteDispatchData, GatewayGuildSoundboardSoundUpdateDispatchData, GatewayGuildSoundboardSoundsUpdateDispatchData, GatewaySoundboardSoundsDispatchData } from '../../types';
export declare const GUILD_SOUNDBOARD_SOUND_CREATE: (self: UsingClient, data: GatewayGuildSoundboardSoundCreateDispatchData) => (ObjectToLower<Omit<GatewayGuildSoundboardSoundCreateDispatchData, "user">> & {
    user: UserStructure;
}) | ObjectToLower<Omit<GatewayGuildSoundboardSoundCreateDispatchData, "user">>;
export declare const GUILD_SOUNDBOARD_SOUND_UPDATE: (self: UsingClient, data: GatewayGuildSoundboardSoundUpdateDispatchData) => (ObjectToLower<Omit<GatewayGuildSoundboardSoundUpdateDispatchData, "user">> & {
    user: UserStructure;
}) | ObjectToLower<Omit<GatewayGuildSoundboardSoundUpdateDispatchData, "user">>;
export declare const GUILD_SOUNDBOARD_SOUNDS_UPDATE: (self: UsingClient, data: GatewayGuildSoundboardSoundsUpdateDispatchData) => {
    guildId: string;
    sounds: ((ObjectToLower<Omit<APISoundBoard, "user">> & {
        user: UserStructure;
    }) | ObjectToLower<Omit<APISoundBoard, "user">>)[];
};
export declare const GUILD_SOUNDBOARD_SOUND_DELETE: (_: UsingClient, data: GatewayGuildSoundboardSoundDeleteDispatchData) => {
    soundId: string;
    guildId: string;
};
export declare const SOUNDBOARD_SOUNDS: (_: UsingClient, data: GatewaySoundboardSoundsDispatchData) => {
    soundboardSounds: {
        name: string;
        soundId: string;
        volume: number;
        emojiId: string | null;
        emojiName: string | null;
        guildId?: string | undefined;
        available: boolean;
        user?: {
            id: string;
            username: string;
            discriminator: string;
            globalName: string | null;
            avatar: string | null;
            bot?: boolean | undefined;
            system?: boolean | undefined;
            mfaEnabled?: boolean | undefined;
            banner?: string | null | undefined;
            accentColor?: number | null | undefined;
            locale?: string | undefined;
            verified?: boolean | undefined;
            email?: string | null | undefined;
            flags?: import("../../types").UserFlags | undefined;
            premiumType?: import("../../types").UserPremiumType | undefined;
            publicFlags?: import("../../types").UserFlags | undefined;
            avatarDecorationData?: import("../../types").APIAvatarDecorationData | null | undefined;
        } | undefined;
    }[];
    guildId: string;
};
