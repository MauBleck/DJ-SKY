import { type ClientUserStructure, type GuildStructure } from '../../client/transformers';
import type { UsingClient } from '../../commands';
import type { APIUnavailableGuild, GatewayRawGuildCreateDispatch, GatewayRawGuildDeleteDispatch } from '../../types';
export declare const BOT_READY: (_self: UsingClient, me: ClientUserStructure) => ClientUserStructure;
export declare const WORKER_READY: (_self: UsingClient, me: ClientUserStructure) => ClientUserStructure;
export declare const WORKER_SHARDS_CONNECTED: (_self: UsingClient, me: ClientUserStructure) => ClientUserStructure;
export declare const RAW_GUILD_CREATE: (self: UsingClient, data: GatewayRawGuildCreateDispatch["d"]) => GuildStructure<"create">;
export declare const RAW_GUILD_DELETE: (self: UsingClient, data: GatewayRawGuildDeleteDispatch["d"]) => Promise<GuildStructure<"cached"> | APIUnavailableGuild>;
export declare const GUILDS_READY: () => void;
